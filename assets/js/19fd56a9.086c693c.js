"use strict";(self.webpackChunksuse_edge_docs=self.webpackChunksuse_edge_docs||[]).push([[5521],{543:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>a,default:()=>h,frontMatter:()=>i,metadata:()=>l,toc:()=>o});var s=t(5893),r=t(1151);const i={sidebar_position:4,title:"BMC automated deployments with Metal3"},a=void 0,l={id:"quickstart/metal3",title:"BMC automated deployments with Metal3",description:"What is Metal3?",source:"@site/docs/quickstart/metal3.md",sourceDirName:"quickstart",slug:"/quickstart/metal3",permalink:"/docs/quickstart/metal3",draft:!1,unlisted:!1,editUrl:"https://github.com/suse-edge/suse-edge.github.io/tree/main/docs/quickstart/metal3.md",tags:[],version:"current",lastUpdatedBy:"Steven Hardy",lastUpdatedAt:1707933372,formattedLastUpdatedAt:"Feb 14, 2024",sidebarPosition:4,frontMatter:{sidebar_position:4,title:"BMC automated deployments with Metal3"},sidebar:"docs",previous:{title:"Standalone Clusters with Edge Image Builder",permalink:"/docs/quickstart/eib"},next:{title:"Remote host onboarding with Elemental",permalink:"/docs/quickstart/elemental"}},d={},o=[{value:"What is Metal<sup>3</sup>?",id:"what-is-metal3",level:2},{value:"Why use this method",id:"why-use-this-method",level:2},{value:"High level architecture",id:"high-level-architecture",level:2},{value:"Prerequisites",id:"prerequisites",level:2},{value:"Setup bootstrap cluster",id:"setup-bootstrap-cluster",level:3},{value:"Install Metal3 dependencies",id:"install-metal3-dependencies",level:3},{value:"Install Cluster API dependencies",id:"install-cluster-api-dependencies",level:3},{value:"Add BareMetalHost Inventory",id:"add-baremetalhost-inventory",level:3},{value:"Create downstream clusters",id:"create-downstream-clusters",level:3},{value:"Controlplane deployment",id:"controlplane-deployment",level:3},{value:"Worker/Compute deployment",id:"workercompute-deployment",level:3},{value:"Next steps",id:"next-steps",level:2},{value:"Planned changes",id:"planned-changes",level:2},{value:"Additional Resources",id:"additional-resources",level:2},{value:"Single-node configuration (experimental/unsupported)",id:"single-node-configuration-experimentalunsupported",level:3}];function c(e){const n={a:"a",code:"code",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,r.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(n.h2,{id:"what-is-metal3",children:["What is Metal",(0,s.jsx)("sup",{children:"3"}),"?"]}),"\n",(0,s.jsxs)(n.p,{children:["Metal",(0,s.jsx)("sup",{children:"3"})," is a ",(0,s.jsx)(n.a,{href:"https://metal3.io/",children:"CNCF project"})," which provides baremetal infrastructure\nmanagement capabilites for Kubernetes."]}),"\n",(0,s.jsxs)(n.p,{children:["Metal",(0,s.jsx)("sup",{children:"3"})," provides Kubernetes-native resources to manage the lifecycle of baremetal servers\nwhich support management via out-of-band protocols such as ",(0,s.jsx)(n.a,{href:"https://www.dmtf.org/standards/redfish",children:"Redfish"})]}),"\n",(0,s.jsxs)(n.p,{children:["It also has mature support for ",(0,s.jsx)(n.a,{href:"https://cluster-api.sigs.k8s.io/",children:"Cluster API (CAPI)"})," which enables management\nof infrastructure resources accross multiple infrastructure providers via a broadly adopted vendor-neutral APIs."]}),"\n",(0,s.jsx)(n.h2,{id:"why-use-this-method",children:"Why use this method"}),"\n",(0,s.jsx)(n.p,{children:"This method is useful for scenarios where the target hardware supports out-of-band management, and a fully-automated\ninfrastructure management flow is desired."}),"\n",(0,s.jsx)(n.p,{children:"This method provides declarative APIs that enable inventory and state management of baremetal servers, including\nautomated inspection, cleaning and provisioning/deprovisioning."}),"\n",(0,s.jsx)(n.h2,{id:"high-level-architecture",children:"High level architecture"}),"\n",(0,s.jsx)(n.p,{children:"TODO diagram"}),"\n",(0,s.jsx)(n.h2,{id:"prerequisites",children:"Prerequisites"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Management cluster"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Must have network connectivity to the target server management/BMC API"}),"\n",(0,s.jsx)(n.li,{children:"Must have network connectivity to the target server controlplane network"}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"https://kubernetes.io/docs/reference/kubectl/kubectl/",children:"Kubectl"}),", ",(0,s.jsx)(n.a,{href:"https://podman.io",children:"Podman"}),", and ",(0,s.jsx)(n.a,{href:"https://helm.sh",children:"Helm"})," need to be installed"]}),"\n",(0,s.jsx)(n.li,{children:"For mult-node management clusters an additional reserved IP address is required"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Hosts to be controlled"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Must support out-of-band management via Redfish, iDRAC or iLO interfaces"}),"\n",(0,s.jsx)(n.li,{children:"Must support deployment via virtualmedia (PXE is not currently supported)"}),"\n",(0,s.jsxs)(n.li,{children:["Must have network connectivity to the Management cluster for access to the Metal",(0,s.jsx)("sup",{children:"3"})," provisioning APIs"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"TODO we need a more detailed support matrix of vendors and BMC firmware versions."}),"\n",(0,s.jsx)(n.h3,{id:"setup-bootstrap-cluster",children:"Setup bootstrap cluster"}),"\n",(0,s.jsxs)(n.p,{children:["The basic steps to install and use Metal",(0,s.jsx)("sup",{children:"3"})," are:"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Install an RKE2 management cluster"}),"\n",(0,s.jsx)(n.li,{children:"Install Rancher"}),"\n",(0,s.jsx)(n.li,{children:"Install a storage provider"}),"\n",(0,s.jsxs)(n.li,{children:["Install the Metal",(0,s.jsx)("sup",{children:"3"})," dependencies"]}),"\n",(0,s.jsx)(n.li,{children:"Install CAPI dependencies"}),"\n",(0,s.jsx)(n.li,{children:"Register BareMetalHost CRs to define the baremetal inventory"}),"\n",(0,s.jsx)(n.li,{children:"Create a downstream cluster by defining CAPI resources"}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"install-metal3-dependencies",children:"Install Metal3 dependencies"}),"\n",(0,s.jsx)(n.p,{children:"If not already installed as part of the Rancher installation, cert-manager must be installed and running"}),"\n",(0,s.jsxs)(n.p,{children:["A persistent storage provider must be installed, Longhorn is recommended but local-path can also be used for\ndev/PoC environments, the instructions below assume a StorageClass has been\n",(0,s.jsx)(n.a,{href:"https://kubernetes.io/docs/tasks/administer-cluster/change-default-storage-class/",children:"marked as default"}),"\notherwise additional configuration for the Metal3 chart is required."]}),"\n",(0,s.jsxs)(n.p,{children:["An additional IP is required, which is managed by ",(0,s.jsx)(n.a,{href:"https://metallb.universe.tf/",children:"MetalLB"})," to provide a\nconsistent endpoint for the Metal",(0,s.jsx)("sup",{children:"3"})," management services.\nThis IP must be part of the controlplane subnet, and reserved for static configuration (not part of any DHCP pool)."]}),"\n",(0,s.jsx)(n.p,{children:"First we install MetalLB:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"helm repo add suse-edge https://suse-edge.github.io/charts\nhelm install \\\n  metallb suse-edge/metallb \\\n  --namespace metallb-system \\\n  --create-namespace\n"})}),"\n",(0,s.jsxs)(n.p,{children:["Then we define an ",(0,s.jsx)(n.code,{children:"IPAddressPool"})," and ",(0,s.jsx)(n.code,{children:"L2Advertisment"})," using the reserved IP, defined as ",(0,s.jsx)(n.code,{children:"STATIC_IRONIC_IP"})," below:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"export STATIC_IRONIC_IP=<STATIC_IRONIC_IP>\n\ncat <<-EOF | kubectl apply -f -\napiVersion: metallb.io/v1beta1\nkind: IPAddressPool\nmetadata:\n  name: ironic-ip-pool\n  namespace: metallb-system\nspec:\n  addresses:\n  - ${STATIC_IRONIC_IP}/32\n  serviceAllocation:\n    priority: 100\n    serviceSelectors:\n    - matchExpressions:\n      - {key: app.kubernetes.io/name, operator: In, values: [metal3-ironic]}\nEOF\n\ncat <<-EOF | kubectl apply -f -\napiVersion: metallb.io/v1beta1\nkind: L2Advertisement\nmetadata:\n  name: ironic-ip-pool-l2-adv\n  namespace: metallb-system\nspec:\n  ipAddressPools:\n  - ironic-ip-pool\nEOF\n"})}),"\n",(0,s.jsx)(n.p,{children:"Now Metal3 can be installed:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:'helm install \\\n  metal3 suse-edge/metal3 \\\n  --namespace metal3-system \\\n  --create-namespace \\\n  --set global.ironicIP="${STATIC_IRONIC_IP}"\n'})}),"\n",(0,s.jsx)(n.p,{children:"Note that it can take around 2 minutes for the initContainer to run on this deployment so ensure the\npods are all running before proceeding:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"kubectl get pods -n metal3-system\nNAME                                                    READY   STATUS    RESTARTS   AGE\nbaremetal-operator-controller-manager-85756794b-fz98d   2/2     Running   0          15m\nmetal3-metal3-ironic-677bc5c8cc-55shd                   4/4     Running   0          15m\nmetal3-metal3-mariadb-7c7d6fdbd8-64c7l                  1/1     Running   0          15m\n"})}),"\n",(0,s.jsx)(n.h3,{id:"install-cluster-api-dependencies",children:"Install Cluster API dependencies"}),"\n",(0,s.jsx)(n.p,{children:"TODO - update this to use the Rancher turtles operator instead"}),"\n",(0,s.jsxs)(n.p,{children:["Install ",(0,s.jsx)(n.a,{href:"https://cluster-api.sigs.k8s.io/user/quick-start.html#install-clusterctl",children:"clusterctl"})," 1.6.x, then install the core, infrastructure, bootstrap and controplane providers"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"clusterctl init --core cluster-api:v1.6.0 --infrastructure metal3:v1.6.0\nclusterctl init --bootstrap rke2 --control-plane rke2\n"})}),"\n",(0,s.jsx)(n.h3,{id:"add-baremetalhost-inventory",children:"Add BareMetalHost Inventory"}),"\n",(0,s.jsxs)(n.p,{children:["To register baremetal servers for automated deployment it is necessary to create two resources, a Secret containing the credentials\nfor access to the BMC, and a Metal",(0,s.jsx)("sup",{children:"3"})," BareMetalHost resource which describes the BMC connection and other details:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:'apiVersion: v1\nkind: Secret\nmetadata:\n  name: controlplane-0-credentials\ntype: Opaque\ndata:\n  username: YWRtaW4=\n  password: cGFzc3dvcmQ=\n---\napiVersion: metal3.io/v1alpha1\nkind: BareMetalHost\nmetadata:\n  name: controlplane-0\n  labels:\n    cluster-role: control-plane\nspec:\n  online: true\n  bootMACAddress: "00:f3:65:8a:a3:b0"\n  bmc:\n    address: redfish-virtualmedia://192.168.125.1:8000/redfish/v1/Systems/68bd0fb6-d124-4d17-a904-cdf33efe83ab\n    disableCertificateVerification: true\n    credentialsName: controlplane-0-credentials\n'})}),"\n",(0,s.jsx)(n.p,{children:"Note the following:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["The Secret username/password must be base64 encoded.  Note this should not include any trailing newlines (e.g use ",(0,s.jsx)(n.code,{children:"echo -n"})," not just ",(0,s.jsx)(n.code,{children:"echo"}),"!)"]}),"\n",(0,s.jsxs)(n.li,{children:["The ",(0,s.jsx)(n.code,{children:"cluster-role"})," label may be set now or later on cluster creation, in the example below we expect ",(0,s.jsx)(n.code,{children:"control-plane"})," or ",(0,s.jsx)(n.code,{children:"worker"})]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"bootMACAddress"})," must be a valid MAC which matches the controlplane NIC of the host"]}),"\n",(0,s.jsxs)(n.li,{children:["The ",(0,s.jsx)(n.code,{children:"bmc"})," address is the connection to the BMC management API, the following are supported:","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"redfish-virtualmedia://<IP ADDRESS>/redfish/v1/Systems/<SYSTEM ID>"})," : redfish virtualmedia, e.g SuperMicro"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"idrac-virtualmedia://<IP ADDRESS>/redfish/v1/Systems/System.Embedded.1"})," : Dell iDRAC"]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["See the ",(0,s.jsx)(n.a,{href:"https://github.com/metal3-io/baremetal-operator/blob/main/docs/api.md",children:"Upstream API docs"})," for more details on the BareMetalHost API"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"create-downstream-clusters",children:"Create downstream clusters"}),"\n",(0,s.jsx)(n.p,{children:"We now create Cluster API resources which define the downstream cluster, and Machine resources which will cause the BareMetalHost resources to\nbe provisioned, then bootstrapped to form an RKE2 cluster."}),"\n",(0,s.jsx)(n.h3,{id:"controlplane-deployment",children:"Controlplane deployment"}),"\n",(0,s.jsx)(n.p,{children:"TODO"}),"\n",(0,s.jsx)(n.h3,{id:"workercompute-deployment",children:"Worker/Compute deployment"}),"\n",(0,s.jsx)(n.p,{children:"TODO"}),"\n",(0,s.jsx)(n.h2,{id:"next-steps",children:"Next steps"}),"\n",(0,s.jsx)(n.h2,{id:"planned-changes",children:"Planned changes"}),"\n",(0,s.jsx)(n.h2,{id:"additional-resources",children:"Additional Resources"}),"\n",(0,s.jsx)(n.h3,{id:"single-node-configuration-experimentalunsupported",children:"Single-node configuration (experimental/unsupported)"}),"\n",(0,s.jsx)(n.p,{children:"For test/PoC environments where the management cluster is a single node, it's possible to avoid the requirement for an additional IP."}),"\n",(0,s.jsx)(n.p,{children:"In this mode the endpoint for the management cluster APIs is the IP of the management cluster, thus is should be either reserved when using DHCP\nor statically configured."}),"\n",(0,s.jsx)(n.p,{children:"TODO example of how to do this with NodePort, if we want to include it in the docs?"})]})}function h(e={}){const{wrapper:n}={...(0,r.a)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}},1151:(e,n,t)=>{t.d(n,{Z:()=>l,a:()=>a});var s=t(7294);const r={},i=s.createContext(r);function a(e){const n=s.useContext(i);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),s.createElement(i.Provider,{value:n},e.children)}}}]);