"use strict";(self.webpackChunksuse_edge_docs=self.webpackChunksuse_edge_docs||[]).push([[9080],{9270:(e,i,o)=>{o.r(i),o.d(i,{assets:()=>c,contentTitle:()=>r,default:()=>h,frontMatter:()=>s,metadata:()=>a,toc:()=>d});var t=o(5893),n=o(1151);const s={sidebar_position:3,title:"Create a custom single-iso image (using SLE Micro installer and combustion image) to use it on Virtual CD-ROM"},r=void 0,a={id:"dev_howto/create-a-single-iso-image-customized",title:"Create a custom single-iso image (using SLE Micro installer and combustion image) to use it on Virtual CD-ROM",description:"The feature to create a single iso (installer image and combustion) to be used by Virtual CD-Rom, will be added to the SLE Micro 5.5 release.",source:"@site/docs/dev_howto/create-a-single-iso-image-customized.md",sourceDirName:"dev_howto",slug:"/dev_howto/create-a-single-iso-image-customized",permalink:"/docs/dev_howto/create-a-single-iso-image-customized",draft:!1,unlisted:!1,editUrl:"https://github.com/suse-edge/suse-edge.github.io/tree/main/docs/dev_howto/create-a-single-iso-image-customized.md",tags:[],version:"current",lastUpdatedBy:"Alberto Morgante Medina",lastUpdatedAt:1696577527,formattedLastUpdatedAt:"Oct 6, 2023",sidebarPosition:3,frontMatter:{sidebar_position:3,title:"Create a custom single-iso image (using SLE Micro installer and combustion image) to use it on Virtual CD-ROM"},sidebar:"docs",previous:{title:"Create a simple container image based on Tumbleweed using OBS (openSUSE Build Service)",permalink:"/docs/dev_howto/create-a-simple-container-image-obs"},next:{title:"*Draft* Introduction",permalink:"/docs/product/atip/introduction"}},c={},d=[{value:"Clone the SLE Micro installer repository from OBS",id:"clone-the-sle-micro-installer-repository-from-obs",level:2},{value:"Modify the combustion package",id:"modify-the-combustion-package",level:2},{value:"Build a new SLE Micro OBS custom image with the new combustion package modified",id:"build-a-new-sle-micro-obs-custom-image-with-the-new-combustion-package-modified",level:2},{value:"Download the new iso image to prepare it with xorriso and adding combustion",id:"download-the-new-iso-image-to-prepare-it-with-xorriso-and-adding-combustion",level:2}];function l(e){const i={a:"a",code:"code",h2:"h2",img:"img",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,n.a)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(i.p,{children:["The feature to create a single iso (installer image and combustion) to be used by Virtual CD-Rom, will be added to the SLE Micro 5.5 release.\nWhen the SLE Micro 5.5 is released, or if you want to use the existing ",(0,t.jsx)(i.a,{href:"https://build.opensuse.org/project/show/home:amorgante:branches:SUSE:SLE-15-SP4:Update:Products:Micro54",children:"build"})," created in this guide, we will be able to create a single-iso image with the combustion script included just following the last part of this document ",(0,t.jsx)(i.a,{href:"#download-the-new-iso-image-to-prepare-it-with-xorriso-and-adding-combustion",children:"here"}),"."]}),"\n",(0,t.jsx)(i.p,{children:"Meanwhile, we could use this workaround to create a single-iso image in order to modify the combustion package to add some lines to detect the CD-Rom properly executing the combustion after installing the SLE Micro image."}),"\n",(0,t.jsx)(i.p,{children:"To do that we can follow the next steps:"}),"\n",(0,t.jsx)(i.h2,{id:"clone-the-sle-micro-installer-repository-from-obs",children:"Clone the SLE Micro installer repository from OBS"}),"\n",(0,t.jsxs)(i.ul,{children:["\n",(0,t.jsxs)(i.li,{children:["Log in to ",(0,t.jsx)(i.a,{href:"https://build.opensuse.org",children:"OBS"})]}),"\n",(0,t.jsxs)(i.li,{children:["Go to the ",(0,t.jsx)(i.a,{href:"https://build.opensuse.org/project/show/SUSE:SLE-15-SP4:Update:Products:Micro54",children:"SLE Micro installer repository"})]}),"\n",(0,t.jsxs)(i.li,{children:["Create a branch from this project to link 2 packages (",(0,t.jsx)(i.code,{children:"combustion"})," and ",(0,t.jsx)(i.code,{children:"SLE-Micro"}),") to modify the combustion package to add some extra code. Then we need to link the SLE Micro image to be able to build a new image with the combustion package modified."]}),"\n"]}),"\n",(0,t.jsxs)(i.p,{children:["To create the link between the 2 packages, go to the ",(0,t.jsx)(i.code,{children:"Meta"})," tab and then add the next lines:"]}),"\n",(0,t.jsx)(i.pre,{children:(0,t.jsx)(i.code,{className:"language-xml",children:'<repository name="standard">\n  <path project="SUSE:SLE-15-SP4:Update:Products:Micro54" repository="standard"/>\n  <arch>aarch64</arch>\n  <arch>ppc64le</arch>\n  <arch>s390x</arch>\n  <arch>x86_64</arch>\n</repository>\n<repository name="images" rebuild="local">\n  <path project="home:<user>:branches:SUSE:SLE-15-SP4:Update:Products:Micro54" repository="standard"/>\n  <arch>x86_64</arch>\n</repository>\n'})}),"\n",(0,t.jsxs)(i.p,{children:["After that click on ",(0,t.jsx)(i.code,{children:"Save"})," and then you should see something like:"]}),"\n",(0,t.jsx)(i.p,{children:(0,t.jsx)(i.img,{alt:"obs-single-iso.png",src:o(9539).Z+"",width:"1541",height:"793"})}),"\n",(0,t.jsx)(i.p,{children:"Now, for any modification to the combustion package, the SLE Micro image will be automatically rebuilt with the new combustion package changes."}),"\n",(0,t.jsx)(i.h2,{id:"modify-the-combustion-package",children:"Modify the combustion package"}),"\n",(0,t.jsxs)(i.p,{children:["To modify the combustion package, we need to go to the ",(0,t.jsx)(i.code,{children:"combustion"})," package and then download the next file:"]}),"\n",(0,t.jsx)(i.pre,{children:(0,t.jsx)(i.code,{children:"osc getbinaries home:<user>:branches:SUSE:SLE-15-SP4:Update:Products:Micro54 combustion standard x86_64 combustion-1.0+git2.obscpio\n"})}),"\n",(0,t.jsx)(i.p,{children:"This file contains the combustion image that will be used by the SLE Micro installer to create the final image."}),"\n",(0,t.jsx)(i.p,{children:"To extract the content of this file, we need to execute the next command:"}),"\n",(0,t.jsx)(i.pre,{children:(0,t.jsx)(i.code,{className:"language-bash",children:"cpio -idmv < combustion-1.0+git2.obscpio\n"})}),"\n",(0,t.jsx)(i.p,{children:"After that, we should see something like:"}),"\n",(0,t.jsx)(i.pre,{children:(0,t.jsx)(i.code,{className:"language-bash",children:"$ ls -l\ntotal 68\ndrwxr-xr-x   4096 sep 14 13:20 .\ndrwx------.  4096 sep 14 13:20 ..\n-rw-r--r--   6064 sep 12 16:09 combustion\n-rw-r--r--    512 sep 12 16:07 combustion-1.0+git2.obscpio\n-rw-r--r--   1032 sep 12 16:07 combustion-prepare.service\n-rw-r--r--   1488 sep 12 16:07 combustion.rules\n-rw-r--r--   1009 sep 12 16:07 combustion.service\n-rw-r--r--  18092 sep 12 16:07 LICENSE\n-rw-r--r--    408 sep 12 16:07 Makefile\n-rw-r--r--   1240 sep 14 13:20 module-setup.sh\n-rw-r--r--   4686 sep 12 16:07 README.md\n"})}),"\n",(0,t.jsx)(i.p,{children:"Let's change the next things:"}),"\n",(0,t.jsxs)(i.ul,{children:["\n",(0,t.jsxs)(i.li,{children:[(0,t.jsx)(i.strong,{children:"Timeout"})," to wait for the config drive from 10 to 15 seconds"]}),"\n"]}),"\n",(0,t.jsx)(i.p,{children:(0,t.jsx)(i.code,{children:"sed -i 's/devtimeout=10/devtimeout=15/g' module-setup.sh"})}),"\n",(0,t.jsxs)(i.ul,{children:["\n",(0,t.jsxs)(i.li,{children:[(0,t.jsx)(i.strong,{children:"Combustion labels"})," to be able to mount the config drive adding the labels ",(0,t.jsx)(i.code,{children:"install"})," and ",(0,t.jsx)(i.code,{children:"INSTALL"})]}),"\n"]}),"\n",(0,t.jsx)(i.pre,{children:(0,t.jsx)(i.code,{className:"language-bash",children:"...\n...\nfor label in combustion COMBUSTION ignition IGNITION install INSTALL; do\n...\n...\n"})}),"\n",(0,t.jsxs)(i.p,{children:["After changing the code, we need to create a new ",(0,t.jsx)(i.code,{children:"combustion-1.0+git2.obscpio"})," file:"]}),"\n",(0,t.jsx)(i.pre,{children:(0,t.jsx)(i.code,{children:"find combustion-1.0+git2 -type f -print | cpio -ocv > combustion-1.0+git2.obscpio\n"})}),"\n",(0,t.jsx)(i.p,{children:"And upload again to the combustion package OBS to build a new package with the modifications"}),"\n",(0,t.jsx)(i.pre,{children:(0,t.jsx)(i.code,{children:'osc add combustion-1.0+git2.obscpio\nosc commit -m "Update combustion-1.0+git2.obscpio"\n'})}),"\n",(0,t.jsx)(i.p,{children:"After that you should see a new build is running:"}),"\n",(0,t.jsx)(i.pre,{children:(0,t.jsx)(i.code,{children:"osc results\n"})}),"\n",(0,t.jsx)(i.h2,{id:"build-a-new-sle-micro-obs-custom-image-with-the-new-combustion-package-modified",children:"Build a new SLE Micro OBS custom image with the new combustion package modified"}),"\n",(0,t.jsx)(i.p,{children:"After the combustion package is built, we need to rebuild a new SLE Micro image with the new combustion package."}),"\n",(0,t.jsxs)(i.p,{children:["To do that you can go to the ",(0,t.jsx)(i.code,{children:"SLE-Micro"})," package and then click on ",(0,t.jsx)(i.code,{children:"Trigger Rebuild"})," and then select the ",(0,t.jsx)(i.code,{children:"images"})," repository and then click on ",(0,t.jsx)(i.code,{children:"Trigger Rebuild"})," again.\nAnother easier option to do that, is to modify the ",(0,t.jsx)(i.code,{children:"SLE-Micro.changes"})," to add some information about the new combustion changes and then commit the changes and then the image will be automatically rebuilt."]}),"\n",(0,t.jsx)(i.h2,{id:"download-the-new-iso-image-to-prepare-it-with-xorriso-and-adding-combustion",children:"Download the new iso image to prepare it with xorriso and adding combustion"}),"\n",(0,t.jsxs)(i.p,{children:["After the image is built, we need to download the new iso image to prepare it with ",(0,t.jsx)(i.code,{children:"xorriso"})," and adding combustion.\nTo do that, we need to go to the ",(0,t.jsx)(i.code,{children:"images"})," repository and then download the new iso image."]}),"\n",(0,t.jsxs)(i.p,{children:["Now, we should have the next files to generate the final ",(0,t.jsx)(i.code,{children:"single-iso"})," image:"]}),"\n",(0,t.jsxs)(i.ul,{children:["\n",(0,t.jsxs)(i.li,{children:["Input:","\n",(0,t.jsxs)(i.ul,{children:["\n",(0,t.jsx)(i.li,{children:"SLE-Micro.x86_64-5.4.0-Default-SelfInstall-Build15.1.install.iso   (This is the new build image with the combustion package modified)"}),"\n",(0,t.jsxs)(i.li,{children:["combustion folder with the next structure:","\n",(0,t.jsxs)(i.ul,{children:["\n",(0,t.jsx)(i.li,{children:"./script   (this is the combustion script with the tasks we want to execute during the installation in the combustion phase)"}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(i.li,{children:["Output:","\n",(0,t.jsxs)(i.ul,{children:["\n",(0,t.jsx)(i.li,{children:"SLE-Micro-Selfinstall-with-mycombustion-single-iso.iso (This is the final single-iso image with the combustion script included and the installer iso image)"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(i.p,{children:["Using ",(0,t.jsx)(i.code,{children:"xorriso"})," we will create the final single-iso:"]}),"\n",(0,t.jsx)(i.pre,{children:(0,t.jsx)(i.code,{children:"xorriso -indev ./SLE-Micro.x86_64-5.4.0-Default-SelfInstall-Build15.1.install.iso \\\n        -outdev ./SLE-Micro-Selfinstall-with-mycombustion-single-iso.iso \\\n        -map ~/my-local-path/combustion /combustion \\\n        -boot_image any replay -changes_pending yes\n"})}),"\n",(0,t.jsxs)(i.p,{children:["After that, we should have the final iso image with the combustion script included ",(0,t.jsx)(i.code,{children:"SLE-Micro-Selfinstall-with-mycombustion-single-iso.iso"})]})]})}function h(e={}){const{wrapper:i}={...(0,n.a)(),...e.components};return i?(0,t.jsx)(i,{...e,children:(0,t.jsx)(l,{...e})}):l(e)}},9539:(e,i,o)=>{o.d(i,{Z:()=>t});const t=o.p+"assets/images/obs-single-iso-f25158e879cbc65ee2a1d678dd26d203.png"},1151:(e,i,o)=>{o.d(i,{Z:()=>a,a:()=>r});var t=o(7294);const n={},s=t.createContext(n);function r(e){const i=t.useContext(s);return t.useMemo((function(){return"function"==typeof e?e(i):{...i,...e}}),[i,e])}function a(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:r(e.components),t.createElement(s.Provider,{value:i},e.children)}}}]);