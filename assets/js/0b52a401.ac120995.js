"use strict";(self.webpackChunksuse_edge_docs=self.webpackChunksuse_edge_docs||[]).push([[69],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>m});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var c=r.createContext({}),l=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},u=function(e){var t=l(e.components);return r.createElement(c.Provider,{value:t},e.children)},d="mdxType",h={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},p=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,i=e.originalType,c=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),d=l(n),p=o,m=d["".concat(c,".").concat(p)]||d[p]||h[p]||i;return n?r.createElement(m,a(a({ref:t},u),{},{components:n})):r.createElement(m,a({ref:t},u))}));function m(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=n.length,a=new Array(i);a[0]=p;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s[d]="string"==typeof e?e:o,a[1]=s;for(var l=2;l<i;l++)a[l]=n[l];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}p.displayName="MDXCreateElement"},7822:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>a,default:()=>h,frontMatter:()=>i,metadata:()=>s,toc:()=>l});var r=n(7462),o=(n(7294),n(3905));const i={title:"SLE Micro vs SLE Micro for Rancher"},a=void 0,s={unversionedId:"quickstart/slemicro-vs-slemicro-rancher",id:"quickstart/slemicro-vs-slemicro-rancher",title:"SLE Micro vs SLE Micro for Rancher",description:"SLE Micro",source:"@site/docs/quickstart/slemicro-vs-slemicro-rancher.md",sourceDirName:"quickstart",slug:"/quickstart/slemicro-vs-slemicro-rancher",permalink:"/quickstart/slemicro-vs-slemicro-rancher",draft:!1,editUrl:"https://github.com/suse-edge/suse-edge.github.io/tree/main/docs/quickstart/slemicro-vs-slemicro-rancher.md",tags:[],version:"current",frontMatter:{title:"SLE Micro vs SLE Micro for Rancher"},sidebar:"docs",previous:{title:"SLE Micro on OSX on Apple Silicon (UTM)",permalink:"/quickstart/slemicro-utm-aarch64"},next:{title:"Rancher portfolio disambiguation",permalink:"/misc/rancher-disambiguation"}},c={},l=[{value:"SLE Micro",id:"sle-micro",level:2},{value:"SLE Micro for Rancher",id:"sle-micro-for-rancher",level:2}],u={toc:l},d="wrapper";function h(e){let{components:t,...n}=e;return(0,o.kt)(d,(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h2",{id:"sle-micro"},"SLE Micro"),(0,o.kt)("p",null,"SLE Micro is a minimal operating system that is specifically designed for use in\ncontainerized environments. It is based on the concept of a transactional server,\nwhere the entire operating system is treated as a single, immutable unit. This\nmeans that any changes to the system are made through atomic transactions, which\ncan be rolled back if necessary. This approach provides increased security,\nreliability, and consistency, making it ideal for use in production environments. "),(0,o.kt)("p",null,"It includes only the essential components required to run container workloads and\nhas a small footprint, making it ideal for running in resource-constrained\nenvironments such as edge devices or IoT devices."),(0,o.kt)("p",null,"SLE Micro can be used as a single-node container host, Kubernetes cluster node,\nsingle-node KVM virtualization host or in public cloud."),(0,o.kt)("p",null,"One of the main benefits of using SLE Micro is its open standards design, which\nallows users to explore commodity hardware from several vendors and build an\nopen source-based software platform. This enables significant cost savings on\nboth software and hardware while keeping full control of the technology stack\nstrategy and roadmap."),(0,o.kt)("p",null,"One example for the usage would be Telecom where SLE Micro is helping them\nunlock the cost-savings potential of open-source design for both software and\nhardware. With the open standards design, they can explore commodity hardware\nfrom several vendors and build an open source-based software platform using\nopen standards such as Kubernetes with open source tools of their choice.\nUltimately, they expect significant savings on software and hardware, while\nkeeping full control of their technology stack strategy and roadmap. "),(0,o.kt)("p",null,"For more info and steps on how to use SLE micro you can check the\n",(0,o.kt)("a",{parentName:"p",href:"https://documentation.suse.com/sle-micro/5.3/html/SLE-Micro-all/book-deployment-slemicro.html"},"following")),(0,o.kt)("h2",{id:"sle-micro-for-rancher"},"SLE Micro for Rancher"),(0,o.kt)("p",null,"SLE Micro for Rancher is a variant of SLE Micro that is specifically designed\nto work with containerized workloads in a Rancher environment.\nIt is built around the Elemental platform, which provides additional features\nand tools that make it easier to deploy and manage container workloads."),(0,o.kt)("p",null,"One of the main differences between SLE Micro for Rancher and SLE Micro is\nthe preconfigured networking and storage options that come with it.\nThis simplifies the process of setting up a Rancher environment and ensures\nthat everything is configured correctly for container workloads."),(0,o.kt)("p",null,"SLE Micro for Rancher also includes integrated monitoring and logging capabilities,\nwhich make it easier to monitor the health and performance of your container\nworkloads. This can help you identify and resolve issues quickly."),(0,o.kt)("p",null,"Another difference is that it is not strictly a transactional server,\nbut it does include transactional features. For example, it uses the Btrfs\nfile system, which is also used in the SLE Micro and supports snapshots and\nrollbacks, allowing you to easily revert to a previous system state if needed. "),(0,o.kt)("p",null,"Additionally, updates to the system are delivered through a transactional\nupdate mechanism, which ensures that the system remains in a consistent state\nthroughout the update process. "),(0,o.kt)("p",null,"See more ",(0,o.kt)("a",{parentName:"p",href:"https://documentation.suse.com/trd/kubernetes/html/kubernetes_ri_rancher-k3s-sles/id-introduction.html"},"here")))}h.isMDXComponent=!0}}]);