"use strict";(self.webpackChunksuse_edge_docs=self.webpackChunksuse_edge_docs||[]).push([[3681],{3984:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>a,contentTitle:()=>l,default:()=>h,frontMatter:()=>i,metadata:()=>o,toc:()=>c});var t=s(5893),r=s(1151);const i={sidebar_position:5,title:"MetalLB Service in front of the Kubernetes API server"},l="Intro",o={id:"quickstart/metallb-kube-api",title:"MetalLB Service in front of the Kubernetes API server",description:"MetalLB in front of the Kubernetes API server",source:"@site/docs/quickstart/metallb-kube-api.md",sourceDirName:"quickstart",slug:"/quickstart/metallb-kube-api",permalink:"/docs/quickstart/metallb-kube-api",draft:!1,unlisted:!1,editUrl:"https://github.com/suse-edge/suse-edge.github.io/tree/main/docs/quickstart/metallb-kube-api.md",tags:[],version:"current",lastUpdatedBy:"Jason Dobies",lastUpdatedAt:1695278255,formattedLastUpdatedAt:"Sep 21, 2023",sidebarPosition:5,frontMatter:{sidebar_position:5,title:"MetalLB Service in front of the Kubernetes API server"},sidebar:"docs",previous:{title:"MetalLB on K3s",permalink:"/docs/quickstart/metallb"},next:{title:"NATS on K3s",permalink:"/docs/quickstart/nats"}},a={},c=[{value:"MetalLB in front of the Kubernetes API server",id:"metallb-in-front-of-the-kubernetes-api-server",level:2},{value:"Prerequisites",id:"prerequisites",level:3},{value:"Install K3s",id:"install-k3s",level:3},{value:"Configure existing K3s cluster",id:"configure-existing-k3s-cluster",level:3},{value:"Install MetalLB",id:"install-metallb",level:3},{value:"Install the Endpoint Copier Operator",id:"install-the-endpoint-copier-operator",level:3},{value:"Add control-plane nodes",id:"add-control-plane-nodes",level:3}];function d(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.a)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h1,{id:"intro",children:"Intro"}),"\n",(0,t.jsx)(n.h2,{id:"metallb-in-front-of-the-kubernetes-api-server",children:"MetalLB in front of the Kubernetes API server"}),"\n",(0,t.jsxs)(n.p,{children:["In this guide a MetalLB service will be used to expose the K3s API externally on an HA K3s cluster with 3 control-plane nodes.\nTo achieve this, a Kubernetes Service of type ",(0,t.jsx)(n.code,{children:"LoadBalancer"})," and Endpoints will be manually created. The Endpoints will keep the IPs of all control plane nodes available in the cluster.\nIn order for the Endpoint to be continuously synchronized with the events occurring in the cluster (adding/removing a node or a node goes offline), the ",(0,t.jsx)(n.a,{href:"https://github.com/suse-edge/endpoint-copier-operator",children:"Endpoint Copier Operator"})," will be deployed. The operator monitors the events happening in the default ",(0,t.jsx)(n.code,{children:"kubernetes"})," Endpoint and updates the managed one automatically to keep them in sync.\nSince the managed Service will be of type ",(0,t.jsx)(n.code,{children:"LoadBalancer"}),", ",(0,t.jsx)(n.code,{children:"MetalLB"})," will assign it a static ",(0,t.jsx)(n.code,{children:"ExternalIP"}),". This ",(0,t.jsx)(n.code,{children:"ExternalIP"})," will be used in order to communicate with the API Server."]}),"\n",(0,t.jsx)(n.h3,{id:"prerequisites",children:"Prerequisites"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["3 hosts to deploy K3s on top. Hint ",(0,t.jsx)(n.a,{href:"https://suse-edge.github.io/docs/quickstart/slemicro-utm-aarch64",children:"SLE Micro on OSX on Apple Silicon (UTM)"})," can be used.","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Ensure the hosts have different hostnames."}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.li,{children:"At least 2 available IPs in the network (One for the Traefik and one for the managed service)."}),"\n",(0,t.jsx)(n.li,{children:"Helm"}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"install-k3s",children:"Install K3s"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"NOTE:"})," In case you don't want a fresh cluster but want to use an already existing one, just skip this step and proceed to the next one."]}),"\n",(0,t.jsxs)(n.p,{children:["First a free IP in the network must be reserved that will be used later for ",(0,t.jsx)(n.code,{children:"ExternalIP"})," of the managed Service."]}),"\n",(0,t.jsxs)(n.p,{children:["SSH to the first host and install ",(0,t.jsx)(n.code,{children:"K3s"})," in cluster mode as:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:'# Export the free IP mentioned above\nexport VIP_SERVICE_IP=<ip>\nexport INSTALL_K3S_SKIP_START=false\n\ncurl -sfL https://get.k3s.io | INSTALL_K3S_EXEC="server --cluster-init --disable=servicelb --write-kubeconfig-mode=644 --tls-san=${VIP_SERVICE_IP} --tls-san=https://${VIP_SERVICE_IP}.sslip.io" K3S_TOKEN=foobar sh -\n'})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"NOTE:"})," Make sure that ",(0,t.jsx)(n.code,{children:"--disable=servicelb"})," flag is provided in the ",(0,t.jsx)(n.code,{children:"k3s server"})," command."]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"NOTE:"})," From now on, the commands should be run on the local machine."]}),"\n",(0,t.jsx)(n.p,{children:"In order to access the API server from outside, the IP of the K3s VM will be used."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"# Replace <node-ip> with the actual IP of the machine\nexport NODE_IP=<node-ip>\nscp ${NODE_IP}:/etc/rancher/k3s/k3s.yaml ~/.kube/config && sed -i '' \"s/127.0.0.1/${NODE_IP}/g\" ~/.kube/config && chmod 600 ~/.kube/config\n"})}),"\n",(0,t.jsx)(n.h3,{id:"configure-existing-k3s-cluster",children:"Configure existing K3s cluster"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"NOTE:"})," This step is valid only if you want to use an existing K3s cluster."]}),"\n",(0,t.jsxs)(n.p,{children:["To use an existing K3s cluster, the ",(0,t.jsx)(n.code,{children:"servicelb"})," lb should be disabled and also ",(0,t.jsx)(n.code,{children:"tls-san"})," flags modified."]}),"\n",(0,t.jsxs)(n.p,{children:["In order to change the K3s flags, ",(0,t.jsx)(n.code,{children:"/etc/systemd/system/k3s.service"})," should be modified on all of the VMs in the cluster."]}),"\n",(0,t.jsxs)(n.p,{children:["The flags should be inserted in the ",(0,t.jsx)(n.code,{children:"ExecStart"}),". For example:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"# Replace the <vip-service-ip> with the actual ip\nExecStart=/usr/local/bin/k3s \\\n    server \\\n        '--cluster-init' \\\n        '--write-kubeconfig-mode=644' \\\n        '--disable=servicelb' \\\n        '--tls-san=<vip-service-ip>' \\\n        '--tls-san=https://<vip-service-ip>.sslip.io' \\\n"})}),"\n",(0,t.jsx)(n.p,{children:"Then the following commands should be executed in order for K3S to load the new configurations:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"systemctl daemon-reload\nsystemctl restart k3s\n"})}),"\n",(0,t.jsx)(n.h3,{id:"install-metallb",children:"Install MetalLB"}),"\n",(0,t.jsxs)(n.p,{children:["To deploy ",(0,t.jsx)(n.code,{children:"MetalLB"}),", the ",(0,t.jsx)(n.a,{href:"https://suse-edge.github.io/docs/quickstart/metallb",children:"MetalLB on K3s"})," guide can be used."]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"NOTE:"})," Ensure that the IP addresses of the ",(0,t.jsx)(n.code,{children:"ip-pool"})," IPAddressPool do not overlap with the IP addresses previously selected for the ",(0,t.jsx)(n.code,{children:"LoadBalancer"})," service."]}),"\n",(0,t.jsxs)(n.p,{children:["Create a separate ",(0,t.jsx)(n.code,{children:"IpAddressPool"})," that will be used only for the managed Service."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"# Export the VIP_SERVICE_IP on the local machine\n# Replace with the actual IP\nexport VIP_SERVICE_IP=<ip>\n\ncat <<-EOF | kubectl apply -f -\napiVersion: metallb.io/v1beta1\nkind: IPAddressPool\nmetadata:\n  name: kubernetes-vip-ip-pool\n  namespace: metallb-system\nspec:\n  addresses:\n  - ${VIP_SERVICE_IP}/32\n  serviceAllocation:\n    priority: 100\n    namespaces:\n      - default\nEOF\n\ncat <<-EOF | kubectl apply -f -\napiVersion: metallb.io/v1beta1\nkind: L2Advertisement\nmetadata:\n  name: ip-pool-l2-adv\n  namespace: metallb-system\nspec:\n  ipAddressPools:\n  - ip-pool\n  - kubernetes-vip-ip-pool\nEOF\n"})}),"\n",(0,t.jsx)(n.h3,{id:"install-the-endpoint-copier-operator",children:"Install the Endpoint Copier Operator"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"helm repo add endpoint-copier-operator https://suse-edge.github.io/endpoint-copier-operator\n\nhelm install --create-namespace -n endpoint-copier-operator endpoint-copier-operator endpoint-copier-operator/endpoint-copier-operator\n"})}),"\n",(0,t.jsx)(n.p,{children:"The command above will deploy three different resources in the cluster:"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:["The ",(0,t.jsx)(n.code,{children:"endpoint-copier-operator"})," operator Deployment with 2 replicas. One will be the leader and the other will take over the leader role if needed."]}),"\n",(0,t.jsxs)(n.li,{children:["A Kubernetes service called ",(0,t.jsx)(n.code,{children:"kubernetes-vip"})," in the ",(0,t.jsx)(n.code,{children:"default"})," namespace that will be a copy of the ",(0,t.jsx)(n.code,{children:"kubernetes"})," Service but from type ",(0,t.jsx)(n.code,{children:"LoadBalancer"}),"."]}),"\n",(0,t.jsxs)(n.li,{children:["An Endpoint resource called ",(0,t.jsx)(n.code,{children:"kubernetes-vip"})," in the ",(0,t.jsx)(n.code,{children:"default"})," namespace that will be a copy of the ",(0,t.jsx)(n.code,{children:"kubernetes"})," Endpoint."]}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:["Verify that the ",(0,t.jsx)(n.code,{children:"kubernetes-vip"})," Service has the correct IP address:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"kubectl get service kubernetes-vip -n default -o=jsonpath='{.status.loadBalancer.ingress[0].ip}'\n"})}),"\n",(0,t.jsxs)(n.p,{children:["Ensure that the ",(0,t.jsx)(n.code,{children:"kubernetes-vip"})," and ",(0,t.jsx)(n.code,{children:"kubernetes"})," Endpoints resources in the ",(0,t.jsx)(n.code,{children:"default"})," namespace point to the same IPs."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"kubectl get endpoints kubernetes kubernetes-vip\n"})}),"\n",(0,t.jsxs)(n.p,{children:["If everything is correct, the last thing left is to use the ",(0,t.jsx)(n.code,{children:"VIP_SERVICE_IP"})," in our ",(0,t.jsx)(n.code,{children:"Kubeconfig"}),"."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"sed -i '' \"s/${NODE_IP}/${VIP_SERVICE_IP}/g\" ~/.kube/config\n"})}),"\n",(0,t.jsxs)(n.p,{children:["From now on, all the ",(0,t.jsx)(n.code,{children:"kubectl"})," will go through the ",(0,t.jsx)(n.code,{children:"kubernetes-vip"})," service."]}),"\n",(0,t.jsx)(n.h3,{id:"add-control-plane-nodes",children:"Add control-plane nodes"}),"\n",(0,t.jsx)(n.p,{children:"To monitor the entire process, two more terminal tabs can be opened."}),"\n",(0,t.jsx)(n.p,{children:"First terminal:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"watch kubectl get nodes\n"})}),"\n",(0,t.jsx)(n.p,{children:"Second terminal:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"watch kubectl get endpoints\n"})}),"\n",(0,t.jsx)(n.p,{children:"Now execute the commands below on the second and third nodes."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:'# Export the VIP_SERVICE_IP in the VM\n# Replace with the actual IP\nexport VIP_SERVICE_IP=<ip>\nexport INSTALL_K3S_SKIP_START=false\n\ncurl -sfL https://get.k3s.io | INSTALL_K3S_EXEC="server --server https://${VIP_SERVICE_IP}:6443 --disable=servicelb --write-kubeconfig-mode=644" K3S_TOKEN=foobar sh -\n'})})]})}function h(e={}){const{wrapper:n}={...(0,r.a)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},1151:(e,n,s)=>{s.d(n,{Z:()=>o,a:()=>l});var t=s(7294);const r={},i=t.createContext(r);function l(e){const n=t.useContext(i);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:l(e.components),t.createElement(i.Provider,{value:n},e.children)}}}]);