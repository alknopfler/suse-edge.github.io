"use strict";(self.webpackChunksuse_edge_docs=self.webpackChunksuse_edge_docs||[]).push([[1827],{1e3:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>d,contentTitle:()=>l,default:()=>p,frontMatter:()=>o,metadata:()=>c,toc:()=>u});var t=s(5893),a=s(1151),i=s(4866),r=s(5162);const o={sidebar_position:2,title:"K3s on SLE Micro"},l="Intro",c={id:"quickstart/k3s-on-slemicro",title:"K3s on SLE Micro",description:"K3s",source:"@site/docs/quickstart/k3s-on-slemicro.mdx",sourceDirName:"quickstart",slug:"/quickstart/k3s-on-slemicro",permalink:"/docs/quickstart/k3s-on-slemicro",draft:!1,unlisted:!1,editUrl:"https://github.com/suse-edge/suse-edge.github.io/tree/main/docs/quickstart/k3s-on-slemicro.mdx",tags:[],version:"current",lastUpdatedBy:"Eduardo M\xednguez",lastUpdatedAt:1687438142,formattedLastUpdatedAt:"Jun 22, 2023",sidebarPosition:2,frontMatter:{sidebar_position:2,title:"K3s on SLE Micro"},sidebar:"docs",previous:{title:"SLE Micro on X86_64 on libvirt (virt-install)",permalink:"/docs/quickstart/slemicro-virt-install-x86_64"},next:{title:"Elemental on OSX on Apple Silicon (UTM)",permalink:"/docs/quickstart/elemental-utm-aarch64"}},d={},u=[{value:"K3s",id:"k3s",level:2},{value:"K3s on SLE Micro",id:"k3s-on-sle-micro",level:2},{value:"K3s all-in-one",id:"k3s-all-in-one",level:2},{value:"Adding agents",id:"adding-agents",level:2},{value:"K3s HA",id:"k3s-ha",level:2},{value:"K3s API HA",id:"k3s-api-ha",level:2},{value:"VIP reservation",id:"vip-reservation",level:3},{value:"K3s installation - First node",id:"k3s-installation---first-node",level:3},{value:"Kube-vip installation",id:"kube-vip-installation",level:3},{value:"K3s installation - Control-plane nodes",id:"k3s-installation---control-plane-nodes",level:3},{value:"Kubeconfig tweaks",id:"kubeconfig-tweaks",level:3},{value:"K3s installation - adding agents",id:"k3s-installation---adding-agents",level:3},{value:"Final picture",id:"final-picture",level:3},{value:"K3s tips",id:"k3s-tips",level:2},{value:"Access Traefik dashboard",id:"access-traefik-dashboard",level:3}];function h(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",img:"img",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,a.a)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h1,{id:"intro",children:"Intro"}),"\n",(0,t.jsx)(n.h2,{id:"k3s",children:"K3s"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.a,{href:"https://k3s.io/",children:"K3s"})," is a highly available, certified Kubernetes distribution designed for production workloads in unattended, resource-constrained, remote locations or inside IoT appliances."]}),"\n",(0,t.jsx)(n.p,{children:"It is packaged as a single and small binary so installations and updates are fast and easy."}),"\n",(0,t.jsxs)(n.p,{children:["The installation procedure can be as simple as downloading the ",(0,t.jsx)(n.code,{children:"k3s"})," binary and run it.\nHowever, the preferred way is to use the install script as it creates and configures a service."]}),"\n",(0,t.jsx)(n.p,{children:"The script supports different installation parameters to customize K3s, including HA support, install control-plane nodes, dedicated etcd nodes, agents, etc."}),"\n",(0,t.jsx)(n.p,{children:"Once installed, the parameters and flags can be modified, added or removed just by changing the systemd unit file or the config file and restarting the service. Neat!"}),"\n",(0,t.jsx)(n.h2,{id:"k3s-on-sle-micro",children:"K3s on SLE Micro"}),"\n",(0,t.jsxs)(n.p,{children:["The installation scripts supports SLE Micro, it recognizes the underlying operating system, installs the ",(0,t.jsx)(n.code,{children:"k3s-selinux"})," package using ",(0,t.jsx)(n.code,{children:"transactional-updates"})," and creates the ",(0,t.jsx)(n.code,{children:"k3s"})," or ",(0,t.jsx)(n.code,{children:"k3s-agent"})," services."]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"NOTE"}),": On SLE Micro, the install script doesn't start the ",(0,t.jsx)(n.code,{children:"k3s"})," or ",(0,t.jsx)(n.code,{children:"k3s-agent"})," service (ideally you should reboot the host once you run a transactional-update), but this can be override by using the ",(0,t.jsx)(n.code,{children:"INSTALL_K3S_SKIP_START=false"})," environment variable."]}),"\n",(0,t.jsx)(n.h2,{id:"k3s-all-in-one",children:"K3s all-in-one"}),"\n",(0,t.jsx)(n.p,{children:"The simplest way to run K3s is an all-in-one server (not suited for production environments) is by running:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"curl -sfL https://get.k3s.io | sh -\n"})}),"\n",(0,t.jsx)(n.p,{children:"A few environment variables to tweak our installation can be used as well as:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:'curl -sfL https://get.k3s.io | INSTALL_K3S_EXEC="server --cluster-init --write-kubeconfig-mode=644" K3S_TOKEN=foobar sh -\n'})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.a,{href:"https://docs.k3s.io/installation/configuration#configuration-with-install-script",children:"The settings can be specified either as environment variables, command line flags"}),", a ",(0,t.jsx)(n.a,{href:"https://docs.k3s.io/installation/configuration#configuration-file",children:"configuration file"}),", or both, it is just a personal choice:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"curl -sfL https://get.k3s.io | sh -s - server --token foobar --cluster-init --write-kubeconfig-mode=644\n"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:'write-kubeconfig-mode: "0644"\ncluster-init: true\ntoken: "foobar"\n'})}),"\n",(0,t.jsx)(n.p,{children:"In this example:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"write-kubeconfig-mode"})," is self explanatory (the default is 0600)"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"cluster-init"})," enables clustering by deploying an embedded etcd database"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"token"})," a random token is generated to be able to add nodes to the cluster, specifying it at installation time makes things easier as it is known upfront"]}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.a,{href:"https://docs.k3s.io/cli",children:"official"})," documentation explains all the flags in detail."]}),"\n",(0,t.jsx)(n.h2,{id:"adding-agents",children:"Adding agents"}),"\n",(0,t.jsx)(n.p,{children:"Adding an agent is as simple as running the install script with a few parameters, including the URL of the cluster as:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"curl -sfL https://get.k3s.io | K3S_URL=https://myserver:6443 K3S_TOKEN=foobar sh -\n"})}),"\n",(0,t.jsx)(n.h2,{id:"k3s-ha",children:"K3s HA"}),"\n",(0,t.jsxs)(n.p,{children:["The easiest way to run a K3s HA cluster is by installing a first node using the ",(0,t.jsx)(n.code,{children:"--cluster-init"})," flag and then, start adding nodes."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:'# First node\ncurl -sfL https://get.k3s.io | INSTALL_K3S_EXEC="server --cluster-init --write-kubeconfig-mode=644" K3S_TOKEN=foobar sh -\n'})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:'# Rest of the nodes\ncurl -sfL https://get.k3s.io | INSTALL_K3S_EXEC="server --server https://myserver:6443 --write-kubeconfig-mode=644" K3S_TOKEN=foobar sh -\n'})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:'# Agent nodes\ncurl -sfL https://get.k3s.io | INSTALL_K3S_EXEC="agent --server https://myserver:6443" K3S_TOKEN=foobar sh -\n'})}),"\n",(0,t.jsx)(n.p,{children:"This is what a cluster with 3 control-plane nodes and 2 agents looks like:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"NAME   STATUS   ROLES                       AGE     VERSION        INTERNAL-IP       EXTERNAL-IP   OS-IMAGE                          KERNEL-VERSION                 CONTAINER-RUNTIME\ncp01   Ready    control-plane,etcd,master   2m26s   v1.26.4+k3s1   192.168.205.99    <none>        SUSE Linux Enterprise Micro 5.4   5.14.21-150400.24.46-default   containerd://1.6.19-k3s1\ncp02   Ready    control-plane,etcd,master   98s     v1.26.4+k3s1   192.168.205.100   <none>        SUSE Linux Enterprise Micro 5.4   5.14.21-150400.24.46-default   containerd://1.6.19-k3s1\ncp03   Ready    control-plane,etcd,master   71s     v1.26.4+k3s1   192.168.205.101   <none>        SUSE Linux Enterprise Micro 5.4   5.14.21-150400.24.46-default   containerd://1.6.19-k3s1\nw01    Ready    <none>                      63s     v1.26.4+k3s1   192.168.205.102   <none>        SUSE Linux Enterprise Micro 5.4   5.14.21-150400.24.46-default   containerd://1.6.19-k3s1\nw02    Ready    <none>                      39s     v1.26.4+k3s1   192.168.205.103   <none>        SUSE Linux Enterprise Micro 5.4   5.14.21-150400.24.46-default   containerd://1.6.19-k3s1\n"})}),"\n",(0,t.jsx)(n.h2,{id:"k3s-api-ha",children:"K3s API HA"}),"\n",(0,t.jsxs)(n.p,{children:["The previous section lacks an important detail, the Kubernetes API is served by the 3 control-plane nodes, but the API certificate is generated just for the first node. If the first node is down, the clients needs their API endpoint to be tweaked to point to another node (i.e.- for ",(0,t.jsx)(n.code,{children:"kubectl"}),", using the ",(0,t.jsx)(n.code,{children:"-s"})," flag or modifying the ",(0,t.jsx)(n.code,{children:"kubeconfig"})," file) and the certificate won't be accepted as it doesn't contain the IP/hostname of that other node (it can be forced to be ignored using ",(0,t.jsx)(n.code,{children:"--insecure-skip-tls-verify=true"})," for ",(0,t.jsx)(n.code,{children:"kubectl"})," but that's not a good practice)."]}),"\n",(0,t.jsx)(n.p,{children:"Ideally a mechanism to expose the K3s API in a high availability scenario is required. This usually means running a load balancer outside of the K3s cluster to serve and redirect the requests to the K3s API endpoints, so if one of the servers fail, the load balancer will re-route the requests to the other ones. This solves the HA problem but it adds complexity as it requires an external service, which sometimes is not available (typically in non-cloud environments such as baremetal deployments)."}),"\n",(0,t.jsxs)(n.p,{children:["One approach can be to run a self-contained solution involving ",(0,t.jsx)(n.a,{href:"http://kube-vip.io/",children:"kube-vip"})," to expose the ",(0,t.jsx)(n.a,{href:"https://kube-vip.io/docs/usage/k3s/",children:"K3s API"})," over a virtual IP (optionally including a load balancer as well). This solves the HA problem but the certificate can still be a problem... but K3s got you covered. By using the ",(0,t.jsx)(n.code,{children:"--tls-san"})," flag at K3s installation time, a list of IPs and/or hostnames can be provided for the certificate to be included as Subject Alternative Names, meaning the K3s API will be happily served from those IPs/hostnames, and if those are the ones being served by the VIP, the solution is now HA and certificate-proof! Let's see it in more detail in the next section."]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"NOTE:"})," kube-vip can be used also to expose Kubernetes services, but this is out of scope of this document."]}),"\n",(0,t.jsx)(n.h3,{id:"vip-reservation",children:"VIP reservation"}),"\n",(0,t.jsxs)(n.p,{children:["The VIP needs to be an IP available in the same subnet than the one where the control plane hosts are running (this is technically not true for the VIP itself but for ",(0,t.jsx)(n.a,{href:"https://kube-vip.io/docs/about/architecture/#technologies",children:"load-balancing"}),")."]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"NOTE:"})," If you are using OSX to virtualize the SLE Micro OS where K3s is going to be installed, you can see the dhcp leases in the ",(0,t.jsx)(n.code,{children:"/var/db/dhcpd_leases"})," file and the subnet range in the ",(0,t.jsx)(n.code,{children:"/Library/Preferences/SystemConfiguration/com.apple.vmnet.plist"})," one. You can use a free IP in that range, but if you find a way to reserve an IP in that range, please open a GitHub issue or a pull request with instructions to do it!."]}),"\n",(0,t.jsx)(n.h3,{id:"k3s-installation---first-node",children:"K3s installation - First node"}),"\n",(0,t.jsxs)(n.p,{children:["The first step is to install K3s in HA and using the ",(0,t.jsx)(n.code,{children:"--tls-san"})," flag as well. This flag can be repeated many times, so in this example will be used to add both the IP (",(0,t.jsx)(n.code,{children:"192.168.205.10"})," in this example) and the DNS name of the VIP (using ",(0,t.jsx)(n.a,{href:"https://sslip.io",children:"sslip.io"})," as a poor's man DNS):"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:'curl -sfL https://get.k3s.io | INSTALL_K3S_EXEC="server --cluster-init --write-kubeconfig-mode=644 --tls-san=192.168.205.10 --tls-san=https://192.168.205.10.sslip.io" K3S_TOKEN=foobar sh -\n'})}),"\n",(0,t.jsx)(n.p,{children:"The rest of the nodes will be installed after kube-vip as the server URL for them to join the cluster will be the VIP."}),"\n",(0,t.jsx)(n.h3,{id:"kube-vip-installation",children:"Kube-vip installation"}),"\n",(0,t.jsxs)(n.p,{children:["The official ",(0,t.jsx)(n.a,{href:"https://kube-vip.io/docs/usage/k3s/",children:"kube-vip"})," documentation explains the steps in more detail, but essentially it means creating the required resource files for kube-vip to run (RBAC and a DaemonSet)."]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"IMPORTANT:"})," IPVS modules must be loaded in order for the ",(0,t.jsx)(n.a,{href:"https://kube-vip.io/docs/about/architecture/#control-plane-load-balancing",children:"load balancer feature"})," to work.\nThis is achieved by creating the following file:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"cat <<- EOF > /etc/modules-load.d/ipvs.conf\nip_vs\nip_vs_rr\nip_vs_wrr\nip_vs_sh\nnf_conntrack\nEOF\n"})}),"\n",(0,t.jsxs)(n.p,{children:["Configurations stored under ",(0,t.jsx)(n.code,{children:"/etc/modules-load.d"})," will be automatically picked up and loaded on boot.\nLoading them for the first time, however, can be achieved without rebooting by executing:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"for i in $(cat /etc/modules-load.d/ipvs.conf); do modprobe ${i}; done\n"})}),"\n",(0,t.jsxs)(n.p,{children:["The Kubernetes resources can be created by leveraging ",(0,t.jsx)(n.a,{href:"https://docs.k3s.io/installation/packaged-components#auto-deploying-manifests-addons",children:"K3s auto-deploy"})," feature\n(aka. any manifest stored in a particular folder of the host ",(0,t.jsx)(n.code,{children:"/var/lib/rancher/k3s/server/manifests"})," will be automatically deployed at the K3s service startup or when the file changes via something similar to ",(0,t.jsx)(n.code,{children:"kubectl apply -f"}),")."]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"NOTE:"})," In this case, the ",(0,t.jsx)(n.code,{children:"--services"})," flag for kube-vip won't be used."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:'export VIP=192.168.205.10\ncat <<- EOF > /var/lib/rancher/k3s/server/manifests/kube-vip.yaml\napiVersion: v1\nkind: ServiceAccount\nmetadata:\n  name: kube-vip\n  namespace: kube-system\n---\napiVersion: rbac.authorization.k8s.io/v1\nkind: ClusterRole\nmetadata:\n  annotations:\n    rbac.authorization.kubernetes.io/autoupdate: "true"\n  name: system:kube-vip-role\nrules:\n  - apiGroups: [""]\n    resources: ["services", "services/status", "nodes", "endpoints"]\n    verbs: ["list","get","watch", "update"]\n  - apiGroups: ["coordination.k8s.io"]\n    resources: ["leases"]\n    verbs: ["list", "get", "watch", "update", "create"]\n---\nkind: ClusterRoleBinding\napiVersion: rbac.authorization.k8s.io/v1\nmetadata:\n  name: system:kube-vip-binding\nroleRef:\n  apiGroup: rbac.authorization.k8s.io\n  kind: ClusterRole\n  name: system:kube-vip-role\nsubjects:\n- kind: ServiceAccount\n  name: kube-vip\n  namespace: kube-system\n---\napiVersion: apps/v1\nkind: DaemonSet\nmetadata:\n  labels:\n    app.kubernetes.io/name: kube-vip-ds\n    app.kubernetes.io/version: v0.5.12\n  name: kube-vip-ds\n  namespace: kube-system\nspec:\n  selector:\n    matchLabels:\n      app.kubernetes.io/name: kube-vip-ds\n  template:\n    metadata:\n      labels:\n        app.kubernetes.io/name: kube-vip-ds\n        app.kubernetes.io/version: v0.5.12\n    spec:\n      affinity:\n        nodeAffinity:\n          requiredDuringSchedulingIgnoredDuringExecution:\n            nodeSelectorTerms:\n            - matchExpressions:\n              - key: node-role.kubernetes.io/master\n                operator: Exists\n            - matchExpressions:\n              - key: node-role.kubernetes.io/control-plane\n                operator: Exists\n      containers:\n      - args:\n        - manager\n        env:\n        - name: vip_arp\n          value: "true"\n        - name: port\n          value: "6443"\n        - name: vip_interface\n          value: eth0\n        - name: vip_cidr\n          value: "32"\n        - name: cp_enable\n          value: "true"\n        - name: cp_namespace\n          value: kube-system\n        - name: vip_ddns\n          value: "false"\n        - name: vip_leaderelection\n          value: "true"\n        - name: vip_leaseduration\n          value: "5"\n        - name: vip_renewdeadline\n          value: "3"\n        - name: vip_retryperiod\n          value: "1"\n        - name: address\n          value: ${VIP}\n        - name: prometheus_server\n          value: :2112\n        - name: lb_enable\n          value: "true"\n        image: ghcr.io/kube-vip/kube-vip:v0.5.12\n        imagePullPolicy: Always\n        name: kube-vip\n        securityContext:\n          capabilities:\n            add:\n            - NET_ADMIN\n            - NET_RAW\n      hostNetwork: true\n      serviceAccountName: kube-vip\n      tolerations:\n      - effect: NoSchedule\n        operator: Exists\n      - effect: NoExecute\n        operator: Exists\nEOF\n'})}),"\n",(0,t.jsx)(n.h3,{id:"k3s-installation---control-plane-nodes",children:"K3s installation - Control-plane nodes"}),"\n",(0,t.jsx)(n.p,{children:"Once kube-vip is in place, the rest of the control-plane nodes can be added to the cluster by pointing them to the VIP as:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:'export VIP=192.168.205.10\ncurl -sfL https://get.k3s.io | INSTALL_K3S_EXEC="server --server https://${VIP}:6443 --write-kubeconfig-mode=644" K3S_TOKEN=foobar sh -\n'})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"NOTE:"})," For a real HA scenario, it is required for ",(0,t.jsx)(n.code,{children:"etcd"})," to have an odd number of nodes, so it would be required to add two more control plane nodes."]}),"\n",(0,t.jsx)(n.p,{children:"After a while, the nodes will join the cluster successfully and an HA cluster will be ready."}),"\n",(0,t.jsx)(n.h3,{id:"kubeconfig-tweaks",children:"Kubeconfig tweaks"}),"\n",(0,t.jsx)(n.p,{children:"The kubeconfig file that is generated as part of the installation has localhost as the Kubernetes API endpoint, so in order to use it from outside, it needs to be changed to the VIP as:"}),"\n",(0,t.jsxs)(i.Z,{children:[(0,t.jsx)(r.Z,{value:"mac",label:"MacOS",default:!0,children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"scp 192.168.205.10:/etc/rancher/k3s/k3s.yaml ~/.kube/config && sed -i '' 's/127.0.0.1/192.168.205.10/g' ~/.kube/config && chmod 600 ~/.kube/config\n"})})}),(0,t.jsx)(r.Z,{value:"suse",label:"SUSE",children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"scp 192.168.205.10:/etc/rancher/k3s/k3s.yaml ~/.kube/config && sed -i 's/127.0.0.1/192.168.205.10/g' ~/.kube/config && chmod 600 ~/.kube/config\n"})})})]}),"\n",(0,t.jsx)(n.h3,{id:"k3s-installation---adding-agents",children:"K3s installation - adding agents"}),"\n",(0,t.jsx)(n.p,{children:"Agents can be added as usual, pointing to the VIP address as:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:'export VIP=192.168.205.10\ncurl -sfL https://get.k3s.io | INSTALL_K3S_EXEC="agent --server https://${VIP}:6443" K3S_TOKEN=foobar sh -\n'})}),"\n",(0,t.jsx)(n.h3,{id:"final-picture",children:"Final picture"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"kubectl get nodes -o jsonpath=\"{.items[*].status.addresses[?(@.type=='InternalIP')].address}\"\n192.168.205.69 192.168.205.70 192.168.205.71 192.168.205.72 192.168.205.73%\n\nkubectl cluster-info\nKubernetes control plane is running at https://192.168.205.10:6443\n"})}),"\n",(0,t.jsx)(n.p,{children:"As you can see, the control plane IP is the VIP and the nodes have their own IP. Sweet!"}),"\n",(0,t.jsx)(n.h2,{id:"k3s-tips",children:"K3s tips"}),"\n",(0,t.jsx)(n.h3,{id:"access-traefik-dashboard",children:"Access Traefik dashboard"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:'kubectl port-forward $(kubectl get pods --selector "app.kubernetes.io/name=traefik" -o=name -n kube-system) -n kube-system 9000:9000\n'})}),"\n",(0,t.jsxs)(n.p,{children:["Then, browse ",(0,t.jsx)(n.a,{href:"http://localhost:9000/dashboard",children:"http://localhost:9000/dashboard"})," to observe the Traefik dashboard:"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.img,{src:s(5960).Z+"",width:"1486",height:"1094"})})]})}function p(e={}){const{wrapper:n}={...(0,a.a)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(h,{...e})}):h(e)}},5162:(e,n,s)=>{s.d(n,{Z:()=>r});s(7294);var t=s(6010);const a={tabItem:"tabItem_Ymn6"};var i=s(5893);function r(e){let{children:n,hidden:s,className:r}=e;return(0,i.jsx)("div",{role:"tabpanel",className:(0,t.Z)(a.tabItem,r),hidden:s,children:n})}},4866:(e,n,s)=>{s.d(n,{Z:()=>y});var t=s(7294),a=s(6010),i=s(2466),r=s(6550),o=s(469),l=s(1980),c=s(7392),d=s(12);function u(e){return t.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,t.isValidElement)(e)&&function(e){const{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function h(e){const{values:n,children:s}=e;return(0,t.useMemo)((()=>{const e=n??function(e){return u(e).map((e=>{let{props:{value:n,label:s,attributes:t,default:a}}=e;return{value:n,label:s,attributes:t,default:a}}))}(s);return function(e){const n=(0,c.l)(e,((e,n)=>e.value===n.value));if(n.length>0)throw new Error(`Docusaurus error: Duplicate values "${n.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[n,s])}function p(e){let{value:n,tabValues:s}=e;return s.some((e=>e.value===n))}function b(e){let{queryString:n=!1,groupId:s}=e;const a=(0,r.k6)(),i=function(e){let{queryString:n=!1,groupId:s}=e;if("string"==typeof n)return n;if(!1===n)return null;if(!0===n&&!s)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return s??null}({queryString:n,groupId:s});return[(0,l._X)(i),(0,t.useCallback)((e=>{if(!i)return;const n=new URLSearchParams(a.location.search);n.set(i,e),a.replace({...a.location,search:n.toString()})}),[i,a])]}function f(e){const{defaultValue:n,queryString:s=!1,groupId:a}=e,i=h(e),[r,l]=(0,t.useState)((()=>function(e){let{defaultValue:n,tabValues:s}=e;if(0===s.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(n){if(!p({value:n,tabValues:s}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${n}" but none of its children has the corresponding value. Available values are: ${s.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return n}const t=s.find((e=>e.default))??s[0];if(!t)throw new Error("Unexpected error: 0 tabValues");return t.value}({defaultValue:n,tabValues:i}))),[c,u]=b({queryString:s,groupId:a}),[f,m]=function(e){let{groupId:n}=e;const s=function(e){return e?`docusaurus.tab.${e}`:null}(n),[a,i]=(0,d.Nk)(s);return[a,(0,t.useCallback)((e=>{s&&i.set(e)}),[s,i])]}({groupId:a}),g=(()=>{const e=c??f;return p({value:e,tabValues:i})?e:null})();(0,o.Z)((()=>{g&&l(g)}),[g]);return{selectedValue:r,selectValue:(0,t.useCallback)((e=>{if(!p({value:e,tabValues:i}))throw new Error(`Can't select invalid tab value=${e}`);l(e),u(e),m(e)}),[u,m,i]),tabValues:i}}var m=s(2389);const g={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var v=s(5893);function k(e){let{className:n,block:s,selectedValue:t,selectValue:r,tabValues:o}=e;const l=[],{blockElementScrollPositionUntilNextRender:c}=(0,i.o5)(),d=e=>{const n=e.currentTarget,s=l.indexOf(n),a=o[s].value;a!==t&&(c(n),r(a))},u=e=>{let n=null;switch(e.key){case"Enter":d(e);break;case"ArrowRight":{const s=l.indexOf(e.currentTarget)+1;n=l[s]??l[0];break}case"ArrowLeft":{const s=l.indexOf(e.currentTarget)-1;n=l[s]??l[l.length-1];break}}n?.focus()};return(0,v.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,a.Z)("tabs",{"tabs--block":s},n),children:o.map((e=>{let{value:n,label:s,attributes:i}=e;return(0,v.jsx)("li",{role:"tab",tabIndex:t===n?0:-1,"aria-selected":t===n,ref:e=>l.push(e),onKeyDown:u,onClick:d,...i,className:(0,a.Z)("tabs__item",g.tabItem,i?.className,{"tabs__item--active":t===n}),children:s??n},n)}))})}function x(e){let{lazy:n,children:s,selectedValue:a}=e;const i=(Array.isArray(s)?s:[s]).filter(Boolean);if(n){const e=i.find((e=>e.props.value===a));return e?(0,t.cloneElement)(e,{className:"margin-top--md"}):null}return(0,v.jsx)("div",{className:"margin-top--md",children:i.map(((e,n)=>(0,t.cloneElement)(e,{key:n,hidden:e.props.value!==a})))})}function j(e){const n=f(e);return(0,v.jsxs)("div",{className:(0,a.Z)("tabs-container",g.tabList),children:[(0,v.jsx)(k,{...e,...n}),(0,v.jsx)(x,{...e,...n})]})}function y(e){const n=(0,m.Z)();return(0,v.jsx)(j,{...e,children:u(e.children)},String(n))}},5960:(e,n,s)=>{s.d(n,{Z:()=>t});const t=s.p+"assets/images/traefikdashboard-b7766c64c6b4fcf62cf1e4b077142895.png"},1151:(e,n,s)=>{s.d(n,{Z:()=>o,a:()=>r});var t=s(7294);const a={},i=t.createContext(a);function r(e){const n=t.useContext(i);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:r(e.components),t.createElement(i.Provider,{value:n},e.children)}}}]);