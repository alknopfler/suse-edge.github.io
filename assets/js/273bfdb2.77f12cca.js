"use strict";(self.webpackChunksuse_edge_docs=self.webpackChunksuse_edge_docs||[]).push([[4775],{6050:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>u,frontMatter:()=>n,metadata:()=>a,toc:()=>d});var o=r(5893),s=r(1151);const n={sidebar_position:3,title:"*Draft* Prerequisites and Assumptions"},i="SUSE Adaptive Telco Infrastructure Platform (ATIP)",a={id:"product/atip/requirements",title:"*Draft* Prerequisites and Assumptions",description:"SUSE ATIP is a platform designed for hosting modern, cloud native, Telco applications at scale from core to edge.",source:"@site/docs/product/atip/requirements.md",sourceDirName:"product/atip",slug:"/product/atip/requirements",permalink:"/docs/product/atip/requirements",draft:!1,unlisted:!1,editUrl:"https://github.com/suse-edge/suse-edge.github.io/tree/main/docs/product/atip/requirements.md",tags:[],version:"current",lastUpdatedBy:"Alberto Morgante Medina",lastUpdatedAt:1690382815,formattedLastUpdatedAt:"Jul 26, 2023",sidebarPosition:3,frontMatter:{sidebar_position:3,title:"*Draft* Prerequisites and Assumptions"},sidebar:"docs",previous:{title:"*Draft* Architecture and Concepts",permalink:"/docs/product/atip/architecture"},next:{title:"*Draft* Management Cluster Setup",permalink:"/docs/product/atip/management-cluster"}},c={},d=[{value:"Hardware",id:"hardware",level:2},{value:"Network",id:"network",level:2},{value:"Services (DHCP, DNS, etc)",id:"services-dhcp-dns-etc",level:2},{value:"Disable rebootmgr",id:"disable-rebootmgr",level:2}];function l(e){const t={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",...(0,s.a)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(t.h1,{id:"suse-adaptive-telco-infrastructure-platform-atip",children:"SUSE Adaptive Telco Infrastructure Platform (ATIP)"}),"\n",(0,o.jsx)(t.p,{children:"SUSE ATIP is a platform designed for hosting modern, cloud native, Telco applications at scale from core to edge."}),"\n",(0,o.jsx)(t.p,{children:"This page will provide details of the expected requirements to deploy and use ATIP"}),"\n",(0,o.jsx)(t.h2,{id:"hardware",children:"Hardware"}),"\n",(0,o.jsx)(t.p,{children:"Minimum hardware specs, support, validated designs, stack validation etc"}),"\n",(0,o.jsx)(t.h2,{id:"network",children:"Network"}),"\n",(0,o.jsx)(t.p,{children:"Expected network setup, example setups"}),"\n",(0,o.jsx)(t.h2,{id:"services-dhcp-dns-etc",children:"Services (DHCP, DNS, etc)"}),"\n",(0,o.jsx)(t.p,{children:"External services required by ATIP, common options for DHCP, DNS, etc."}),"\n",(0,o.jsx)(t.h2,{id:"disable-rebootmgr",children:"Disable rebootmgr"}),"\n",(0,o.jsxs)(t.p,{children:[(0,o.jsx)(t.code,{children:"rebootmgr"})," is a service which allow to configure a strategic for reboot in case system have some updates available pending.\nFor telco workloads is really important to disable or configure properly the rebootmgr service in order to avoid the reboot of the nodes in case of updates scheduled by the system."]}),"\n",(0,o.jsxs)(t.blockquote,{children:["\n",(0,o.jsxs)(t.p,{children:["For more information about rebootmgr, please check: ",(0,o.jsx)(t.a,{href:"https://github.com/SUSE/rebootmgr",children:"https://github.com/SUSE/rebootmgr"})]}),"\n"]}),"\n",(0,o.jsx)(t.p,{children:"You could verify the strategic being used as:"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-bash",children:"cat /etc/rebootmgr.conf\n[rebootmgr]\nwindow-start=03:30\nwindow-duration=1h30m\nstrategy=best-effort\nlock-group=default\n"})}),"\n",(0,o.jsx)(t.p,{children:"and you could disable it as:"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-bash",children:"sed -i 's/strategy=best-effort/strategy=off/g' /etc/rebootmgr.conf\n"})}),"\n",(0,o.jsx)(t.p,{children:"or using the rebootmgrctl command:"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-bash",children:"rebootmgrctl strategy off\n"})})]})}function u(e={}){const{wrapper:t}={...(0,s.a)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(l,{...e})}):l(e)}},1151:(e,t,r)=>{r.d(t,{Z:()=>a,a:()=>i});var o=r(7294);const s={},n=o.createContext(s);function i(e){const t=o.useContext(n);return o.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:i(e.components),o.createElement(n.Provider,{value:t},e.children)}}}]);