"use strict";(self.webpackChunksuse_edge_docs=self.webpackChunksuse_edge_docs||[]).push([[2284],{4008:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>c,contentTitle:()=>t,default:()=>h,frontMatter:()=>o,metadata:()=>a,toc:()=>l});var i=r(5893),s=r(1151);const o={sidebar_position:1,title:"SLE Micro vs SLE Micro for Rancher"},t=void 0,a={id:"misc/slemicro-vs-slemicro-rancher",title:"SLE Micro vs SLE Micro for Rancher",description:"SLE Micro",source:"@site/docs/misc/slemicro-vs-slemicro-rancher.md",sourceDirName:"misc",slug:"/misc/slemicro-vs-slemicro-rancher",permalink:"/docs/misc/slemicro-vs-slemicro-rancher",draft:!1,unlisted:!1,editUrl:"https://github.com/suse-edge/suse-edge.github.io/tree/main/docs/misc/slemicro-vs-slemicro-rancher.md",tags:[],version:"current",lastUpdatedBy:"Klaus K\xe4mpf",lastUpdatedAt:1685350793,formattedLastUpdatedAt:"May 29, 2023",sidebarPosition:1,frontMatter:{sidebar_position:1,title:"SLE Micro vs SLE Micro for Rancher"},sidebar:"docs",previous:{title:"NVIDIA GPU's on SLE Micro",permalink:"/docs/quickstart/nvidia-slemicro"},next:{title:"Rancher portfolio disambiguation",permalink:"/docs/misc/rancher-disambiguation"}},c={},l=[{value:"SLE Micro",id:"sle-micro",level:2},{value:"SLE Micro for Rancher",id:"sle-micro-for-rancher",level:2}];function d(e){const n={a:"a",h2:"h2",li:"li",p:"p",strong:"strong",ul:"ul",...(0,s.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h2,{id:"sle-micro",children:"SLE Micro"}),"\n",(0,i.jsx)(n.p,{children:"SLE Micro is a minimal, general-purpose operating system that is also\nwell suited for use in\ncontainerized environments. It is based on the concept of a transactional server,\nwhere the entire operating system is treated as a single, immutable unit. This\nmeans that any changes to the system are made through atomic transactions, which\ncan be rolled back if necessary. This approach provides increased security,\nreliability, and consistency, making it ideal for use in production environments."}),"\n",(0,i.jsx)(n.p,{children:"It includes only the essential components required to run container workloads and\nhas a small footprint, making it ideal for running in resource-constrained\nenvironments such as edge devices or IoT devices."}),"\n",(0,i.jsx)(n.p,{children:"SLE Micro can be used as a single-node container host, Kubernetes cluster node,\nsingle-node KVM virtualization host or in public cloud."}),"\n",(0,i.jsx)(n.p,{children:"One of the main benefits of using SLE Micro is its open standards design, which\nallows users to explore commodity hardware from several vendors and build an\nopen source-based software platform. This enables significant cost savings on\nboth software and hardware while keeping full control of the technology stack\nstrategy and roadmap."}),"\n",(0,i.jsx)(n.p,{children:"One example for the usage would be Telecom where SLE Micro is helping them\nunlock the cost-savings potential of open-source design for both software and\nhardware. With the open standards design, they can explore commodity hardware\nfrom several vendors and build an open source-based software platform using\nopen standards such as Kubernetes with open source tools of their choice.\nUltimately, they expect significant savings on software and hardware, while\nkeeping full control of their technology stack strategy and roadmap."}),"\n",(0,i.jsxs)(n.p,{children:["For more info and steps on how to use SLE micro you can check the\n",(0,i.jsx)(n.a,{href:"https://documentation.suse.com/sle-micro/5.3/html/SLE-Micro-all/book-deployment-slemicro.html",children:"following"})]}),"\n",(0,i.jsx)(n.h2,{id:"sle-micro-for-rancher",children:"SLE Micro for Rancher"}),"\n",(0,i.jsx)(n.p,{children:"SLE Micro for Rancher is a single-purpose variant of SLE Micro. It is specifically designed\nto run Kubernetes and its containerized workloads in a Rancher environment."}),"\n",(0,i.jsxs)(n.p,{children:["It is built around the ",(0,i.jsx)(n.a,{href:"https://elemental.docs.rancher.com",children:"Elemental platform"}),", which provides\nthe features and tools for declarative deployment and\nmanagement of the operating system."]}),"\n",(0,i.jsx)(n.p,{children:"There are a couple of fundamental differences between SLE Micro for\nRancher and SLE Micro."}),"\n",(0,i.jsxs)(n.p,{children:["SLE Micro ",(0,i.jsx)(n.strong,{children:"for Rancher"})," is"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"declarative"}),"\n",(0,i.jsx)(n.li,{children:"image based"}),"\n",(0,i.jsx)(n.li,{children:"cloud native."}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"Making it an ideal match to Kubernetes and Rancher."}),"\n",(0,i.jsx)(n.p,{children:"SLE Micro is more traditional being"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"imperative"}),"\n",(0,i.jsx)(n.li,{children:"package based"}),"\n",(0,i.jsx)(n.li,{children:"transactional"}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"Being package-based, SLE Micro still needs package repositories for\ndeployment and updates and additionally a registry for container\nworkloads."}),"\n",(0,i.jsx)(n.p,{children:"SLE Micro for Rancher fits ideally into an existing cloud-native\ninfrastructure as deployments and updates are served via a container\nregistry."}),"\n",(0,i.jsx)(n.p,{children:"It is completely manageable from within Rancher, everything in the SLE\nMicro for Rancher stack is represented as a Kubernetes resource"}),"\n",(0,i.jsx)(n.p,{children:"This all makes SLE Micro for Rancher ideally suited for running Kubernetes\nclusters on the edge."})]})}function h(e={}){const{wrapper:n}={...(0,s.a)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},1151:(e,n,r)=>{r.d(n,{Z:()=>a,a:()=>t});var i=r(7294);const s={},o=i.createContext(s);function t(e){const n=i.useContext(o);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:t(e.components),i.createElement(o.Provider,{value:n},e.children)}}}]);